// Code generated by goctl. DO NOT EDIT.
// Source: block.proto

package blockclient

import (
	"context"

	"block/block"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BargainAmount                 = block.BargainAmount
	BargainPurchaseResponse       = block.BargainPurchaseResponse
	CreateCryptominerRequest      = block.CreateCryptominerRequest
	CreatePropRequest             = block.CreatePropRequest
	Cryptominer                   = block.Cryptominer
	GetBargainCryptominerRequest  = block.GetBargainCryptominerRequest
	GetBargainCryptominerResponse = block.GetBargainCryptominerResponse
	GetBargainProgressRequest     = block.GetBargainProgressRequest
	GetBargainProgressResponse    = block.GetBargainProgressResponse
	GetBargainRecordRequest       = block.GetBargainRecordRequest
	GetBargainRecordResponse      = block.GetBargainRecordResponse
	GetBargainRuleRequest         = block.GetBargainRuleRequest
	GetBargainRuleResponse        = block.GetBargainRuleResponse
	GetGoodsListRequest           = block.GetGoodsListRequest
	GetGoodsListResponse          = block.GetGoodsListResponse
	IsSuccessResponse             = block.IsSuccessResponse
	JudgeBargainRequest           = block.JudgeBargainRequest
	JudgeBargainResponse          = block.JudgeBargainResponse
	Profile                       = block.Profile
	Prop                          = block.Prop
	PurchaseRequest               = block.PurchaseRequest
	Request                       = block.Request
	Response                      = block.Response

	Block interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
		CreateCryptominer(ctx context.Context, in *CreateCryptominerRequest, opts ...grpc.CallOption) (*IsSuccessResponse, error)
		CreateProp(ctx context.Context, in *CreatePropRequest, opts ...grpc.CallOption) (*IsSuccessResponse, error)
		GetGoodsList(ctx context.Context, in *GetGoodsListRequest, opts ...grpc.CallOption) (*GetGoodsListResponse, error)
		JudgeBargain(ctx context.Context, in *JudgeBargainRequest, opts ...grpc.CallOption) (*JudgeBargainResponse, error)
		FullPurchase(ctx context.Context, in *PurchaseRequest, opts ...grpc.CallOption) (*IsSuccessResponse, error)
		BargainPurchase(ctx context.Context, in *PurchaseRequest, opts ...grpc.CallOption) (*BargainPurchaseResponse, error)
		GetBargainRule(ctx context.Context, in *GetBargainRuleRequest, opts ...grpc.CallOption) (*GetBargainRuleResponse, error)
		GetBargainCryptominer(ctx context.Context, in *GetBargainCryptominerRequest, opts ...grpc.CallOption) (*GetBargainCryptominerResponse, error)
		GetBargainProgress(ctx context.Context, in *GetBargainProgressRequest, opts ...grpc.CallOption) (*GetBargainProgressResponse, error)
		GetBargainRecord(ctx context.Context, in *GetBargainRecordRequest, opts ...grpc.CallOption) (*GetBargainRecordResponse, error)
	}

	defaultBlock struct {
		cli zrpc.Client
	}
)

func NewBlock(cli zrpc.Client) Block {
	return &defaultBlock{
		cli: cli,
	}
}

func (m *defaultBlock) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := block.NewBlockClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

func (m *defaultBlock) CreateCryptominer(ctx context.Context, in *CreateCryptominerRequest, opts ...grpc.CallOption) (*IsSuccessResponse, error) {
	client := block.NewBlockClient(m.cli.Conn())
	return client.CreateCryptominer(ctx, in, opts...)
}

func (m *defaultBlock) CreateProp(ctx context.Context, in *CreatePropRequest, opts ...grpc.CallOption) (*IsSuccessResponse, error) {
	client := block.NewBlockClient(m.cli.Conn())
	return client.CreateProp(ctx, in, opts...)
}

func (m *defaultBlock) GetGoodsList(ctx context.Context, in *GetGoodsListRequest, opts ...grpc.CallOption) (*GetGoodsListResponse, error) {
	client := block.NewBlockClient(m.cli.Conn())
	return client.GetGoodsList(ctx, in, opts...)
}

func (m *defaultBlock) JudgeBargain(ctx context.Context, in *JudgeBargainRequest, opts ...grpc.CallOption) (*JudgeBargainResponse, error) {
	client := block.NewBlockClient(m.cli.Conn())
	return client.JudgeBargain(ctx, in, opts...)
}

func (m *defaultBlock) FullPurchase(ctx context.Context, in *PurchaseRequest, opts ...grpc.CallOption) (*IsSuccessResponse, error) {
	client := block.NewBlockClient(m.cli.Conn())
	return client.FullPurchase(ctx, in, opts...)
}

func (m *defaultBlock) BargainPurchase(ctx context.Context, in *PurchaseRequest, opts ...grpc.CallOption) (*BargainPurchaseResponse, error) {
	client := block.NewBlockClient(m.cli.Conn())
	return client.BargainPurchase(ctx, in, opts...)
}

func (m *defaultBlock) GetBargainRule(ctx context.Context, in *GetBargainRuleRequest, opts ...grpc.CallOption) (*GetBargainRuleResponse, error) {
	client := block.NewBlockClient(m.cli.Conn())
	return client.GetBargainRule(ctx, in, opts...)
}

func (m *defaultBlock) GetBargainCryptominer(ctx context.Context, in *GetBargainCryptominerRequest, opts ...grpc.CallOption) (*GetBargainCryptominerResponse, error) {
	client := block.NewBlockClient(m.cli.Conn())
	return client.GetBargainCryptominer(ctx, in, opts...)
}

func (m *defaultBlock) GetBargainProgress(ctx context.Context, in *GetBargainProgressRequest, opts ...grpc.CallOption) (*GetBargainProgressResponse, error) {
	client := block.NewBlockClient(m.cli.Conn())
	return client.GetBargainProgress(ctx, in, opts...)
}

func (m *defaultBlock) GetBargainRecord(ctx context.Context, in *GetBargainRecordRequest, opts ...grpc.CallOption) (*GetBargainRecordResponse, error) {
	client := block.NewBlockClient(m.cli.Conn())
	return client.GetBargainRecord(ctx, in, opts...)
}
