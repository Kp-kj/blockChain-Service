// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.4
// source: block.proto

package block

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ping string `protobuf:"bytes,1,opt,name=ping,proto3" json:"ping,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetPing() string {
	if x != nil {
		return x.Ping
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{1}
}

func (x *Response) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 管理系统创建矿机
type CreateCryptominerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminuserId         int64  `protobuf:"varint,1,opt,name=adminuser_id,json=adminuserId,proto3" json:"adminuser_id,omitempty"`                         // 创建者id
	CryptominerName     string `protobuf:"bytes,2,opt,name=cryptominer_name,json=cryptominerName,proto3" json:"cryptominer_name,omitempty"`              // 矿机名称
	CryptominerPicture  string `protobuf:"bytes,3,opt,name=cryptominer_picture,json=cryptominerPicture,proto3" json:"cryptominer_picture,omitempty"`     // 矿机图片
	CryptominerDescribe string `protobuf:"bytes,4,opt,name=cryptominer_describe,json=cryptominerDescribe,proto3" json:"cryptominer_describe,omitempty"`  // 矿机描述
	CryptominerPrice    int64  `protobuf:"varint,5,opt,name=cryptominer_price,json=cryptominerPrice,proto3" json:"cryptominer_price,omitempty"`          // 矿机价格
	CryptominerDuration int64  `protobuf:"varint,6,opt,name=cryptominer_duration,json=cryptominerDuration,proto3" json:"cryptominer_duration,omitempty"` // 矿机运作时间
}

func (x *CreateCryptominerRequest) Reset() {
	*x = CreateCryptominerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCryptominerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCryptominerRequest) ProtoMessage() {}

func (x *CreateCryptominerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCryptominerRequest.ProtoReflect.Descriptor instead.
func (*CreateCryptominerRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCryptominerRequest) GetAdminuserId() int64 {
	if x != nil {
		return x.AdminuserId
	}
	return 0
}

func (x *CreateCryptominerRequest) GetCryptominerName() string {
	if x != nil {
		return x.CryptominerName
	}
	return ""
}

func (x *CreateCryptominerRequest) GetCryptominerPicture() string {
	if x != nil {
		return x.CryptominerPicture
	}
	return ""
}

func (x *CreateCryptominerRequest) GetCryptominerDescribe() string {
	if x != nil {
		return x.CryptominerDescribe
	}
	return ""
}

func (x *CreateCryptominerRequest) GetCryptominerPrice() int64 {
	if x != nil {
		return x.CryptominerPrice
	}
	return 0
}

func (x *CreateCryptominerRequest) GetCryptominerDuration() int64 {
	if x != nil {
		return x.CryptominerDuration
	}
	return 0
}

// 响应
type IsSuccessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"` // 创建成功
}

func (x *IsSuccessResponse) Reset() {
	*x = IsSuccessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsSuccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsSuccessResponse) ProtoMessage() {}

func (x *IsSuccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsSuccessResponse.ProtoReflect.Descriptor instead.
func (*IsSuccessResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{3}
}

func (x *IsSuccessResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

// 管理系统创建道具
type CreatePropRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminuserId  int64  `protobuf:"varint,1,opt,name=adminuser_id,json=adminuserId,proto3" json:"adminuser_id,omitempty"`   // 创建者id
	PropName     string `protobuf:"bytes,2,opt,name=prop_name,json=propName,proto3" json:"prop_name,omitempty"`             // 矿机名称
	PropPicture  string `protobuf:"bytes,3,opt,name=prop_picture,json=propPicture,proto3" json:"prop_picture,omitempty"`    // 矿机图片
	PropDescribe string `protobuf:"bytes,4,opt,name=prop_describe,json=propDescribe,proto3" json:"prop_describe,omitempty"` // 矿机描述
	PropPrice    int64  `protobuf:"varint,5,opt,name=prop_price,json=propPrice,proto3" json:"prop_price,omitempty"`         // 矿机价格
}

func (x *CreatePropRequest) Reset() {
	*x = CreatePropRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePropRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePropRequest) ProtoMessage() {}

func (x *CreatePropRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePropRequest.ProtoReflect.Descriptor instead.
func (*CreatePropRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{4}
}

func (x *CreatePropRequest) GetAdminuserId() int64 {
	if x != nil {
		return x.AdminuserId
	}
	return 0
}

func (x *CreatePropRequest) GetPropName() string {
	if x != nil {
		return x.PropName
	}
	return ""
}

func (x *CreatePropRequest) GetPropPicture() string {
	if x != nil {
		return x.PropPicture
	}
	return ""
}

func (x *CreatePropRequest) GetPropDescribe() string {
	if x != nil {
		return x.PropDescribe
	}
	return ""
}

func (x *CreatePropRequest) GetPropPrice() int64 {
	if x != nil {
		return x.PropPrice
	}
	return 0
}

// 获取商城列表
type GetGoodsListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetGoodsListRequest) Reset() {
	*x = GetGoodsListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodsListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodsListRequest) ProtoMessage() {}

func (x *GetGoodsListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodsListRequest.ProtoReflect.Descriptor instead.
func (*GetGoodsListRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{5}
}

func (x *GetGoodsListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 获取商城列表
type GetGoodsListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cryptominer []*Cryptominer `protobuf:"bytes,1,rep,name=Cryptominer,proto3" json:"Cryptominer,omitempty"`
	Prop        []*Prop        `protobuf:"bytes,2,rep,name=Prop,proto3" json:"Prop,omitempty"`
}

func (x *GetGoodsListResponse) Reset() {
	*x = GetGoodsListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodsListResponse) ProtoMessage() {}

func (x *GetGoodsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodsListResponse.ProtoReflect.Descriptor instead.
func (*GetGoodsListResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{6}
}

func (x *GetGoodsListResponse) GetCryptominer() []*Cryptominer {
	if x != nil {
		return x.Cryptominer
	}
	return nil
}

func (x *GetGoodsListResponse) GetProp() []*Prop {
	if x != nil {
		return x.Prop
	}
	return nil
}

// 矿机
type Cryptominer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CryptominerId        int64  `protobuf:"varint,1,opt,name=cryptominer_id,json=cryptominerId,proto3" json:"cryptominer_id,omitempty"` // ID
	UserId               int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CryptominerTypeid    int64  `protobuf:"varint,3,opt,name=cryptominer_typeid,json=cryptominerTypeid,proto3" json:"cryptominer_typeid,omitempty"`            // 矿机种类id
	CryptominerName      string `protobuf:"bytes,4,opt,name=cryptominer_name,json=cryptominerName,proto3" json:"cryptominer_name,omitempty"`                   // 矿机名称
	CryptominerPicture   string `protobuf:"bytes,5,opt,name=cryptominer_picture,json=cryptominerPicture,proto3" json:"cryptominer_picture,omitempty"`          // 矿机图片
	CryptominerDescribe  string `protobuf:"bytes,6,opt,name=cryptominer_describe,json=cryptominerDescribe,proto3" json:"cryptominer_describe,omitempty"`       // 矿机描述
	CryptominerPrice     int64  `protobuf:"varint,7,opt,name=cryptominer_price,json=cryptominerPrice,proto3" json:"cryptominer_price,omitempty"`               // 矿机价格
	OptionalStatus       string `protobuf:"bytes,8,opt,name=optional_status,json=optionalStatus,proto3" json:"optional_status,omitempty"`                      // 矿机状态 0：未购买 1：工作中 2：已失效 3：砍价中
	PurchaseTime         string `protobuf:"bytes,9,opt,name=purchase_time,json=purchaseTime,proto3" json:"purchase_time,omitempty"`                            // 购买时间
	IsBargain            bool   `protobuf:"varint,10,opt,name=is_bargain,json=isBargain,proto3" json:"is_bargain,omitempty"`                                   // 是否可砍
	PurchaseWay          string `protobuf:"bytes,11,opt,name=purchase_way,json=purchaseWay,proto3" json:"purchase_way,omitempty"`                              // 购买方式 0：全额购买 1：限时砍价
	CryptominerStartTime string `protobuf:"bytes,12,opt,name=cryptominer_start_time,json=cryptominerStartTime,proto3" json:"cryptominer_start_time,omitempty"` // 矿机开始运作时间
	CryptominerEndTime   string `protobuf:"bytes,13,opt,name=cryptominer_end_time,json=cryptominerEndTime,proto3" json:"cryptominer_end_time,omitempty"`       // 矿机失效时间
	CryptominerDuration  string `protobuf:"bytes,14,opt,name=cryptominer_duration,json=cryptominerDuration,proto3" json:"cryptominer_duration,omitempty"`      // 矿机运作时间
}

func (x *Cryptominer) Reset() {
	*x = Cryptominer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cryptominer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cryptominer) ProtoMessage() {}

func (x *Cryptominer) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cryptominer.ProtoReflect.Descriptor instead.
func (*Cryptominer) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{7}
}

func (x *Cryptominer) GetCryptominerId() int64 {
	if x != nil {
		return x.CryptominerId
	}
	return 0
}

func (x *Cryptominer) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Cryptominer) GetCryptominerTypeid() int64 {
	if x != nil {
		return x.CryptominerTypeid
	}
	return 0
}

func (x *Cryptominer) GetCryptominerName() string {
	if x != nil {
		return x.CryptominerName
	}
	return ""
}

func (x *Cryptominer) GetCryptominerPicture() string {
	if x != nil {
		return x.CryptominerPicture
	}
	return ""
}

func (x *Cryptominer) GetCryptominerDescribe() string {
	if x != nil {
		return x.CryptominerDescribe
	}
	return ""
}

func (x *Cryptominer) GetCryptominerPrice() int64 {
	if x != nil {
		return x.CryptominerPrice
	}
	return 0
}

func (x *Cryptominer) GetOptionalStatus() string {
	if x != nil {
		return x.OptionalStatus
	}
	return ""
}

func (x *Cryptominer) GetPurchaseTime() string {
	if x != nil {
		return x.PurchaseTime
	}
	return ""
}

func (x *Cryptominer) GetIsBargain() bool {
	if x != nil {
		return x.IsBargain
	}
	return false
}

func (x *Cryptominer) GetPurchaseWay() string {
	if x != nil {
		return x.PurchaseWay
	}
	return ""
}

func (x *Cryptominer) GetCryptominerStartTime() string {
	if x != nil {
		return x.CryptominerStartTime
	}
	return ""
}

func (x *Cryptominer) GetCryptominerEndTime() string {
	if x != nil {
		return x.CryptominerEndTime
	}
	return ""
}

func (x *Cryptominer) GetCryptominerDuration() string {
	if x != nil {
		return x.CryptominerDuration
	}
	return ""
}

// 道具
type Prop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropId       int64  `protobuf:"varint,1,opt,name=prop_id,json=propId,proto3" json:"prop_id,omitempty"` // ID
	UserId       int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PropTypeid   int64  `protobuf:"varint,3,opt,name=prop_typeid,json=propTypeid,proto3" json:"prop_typeid,omitempty"`      // 道具种类id
	PropName     string `protobuf:"bytes,4,opt,name=prop_name,json=propName,proto3" json:"prop_name,omitempty"`             // 道具名称
	PropPicture  string `protobuf:"bytes,5,opt,name=prop_picture,json=propPicture,proto3" json:"prop_picture,omitempty"`    // 道具图片
	PropDescribe string `protobuf:"bytes,6,opt,name=prop_describe,json=propDescribe,proto3" json:"prop_describe,omitempty"` // 道具描述
	PropPrice    int64  `protobuf:"varint,7,opt,name=prop_price,json=propPrice,proto3" json:"prop_price,omitempty"`         // 道具价格
	PurchaseTime string `protobuf:"bytes,8,opt,name=purchase_time,json=purchaseTime,proto3" json:"purchase_time,omitempty"` // 购买时间
}

func (x *Prop) Reset() {
	*x = Prop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prop) ProtoMessage() {}

func (x *Prop) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prop.ProtoReflect.Descriptor instead.
func (*Prop) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{8}
}

func (x *Prop) GetPropId() int64 {
	if x != nil {
		return x.PropId
	}
	return 0
}

func (x *Prop) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Prop) GetPropTypeid() int64 {
	if x != nil {
		return x.PropTypeid
	}
	return 0
}

func (x *Prop) GetPropName() string {
	if x != nil {
		return x.PropName
	}
	return ""
}

func (x *Prop) GetPropPicture() string {
	if x != nil {
		return x.PropPicture
	}
	return ""
}

func (x *Prop) GetPropDescribe() string {
	if x != nil {
		return x.PropDescribe
	}
	return ""
}

func (x *Prop) GetPropPrice() int64 {
	if x != nil {
		return x.PropPrice
	}
	return 0
}

func (x *Prop) GetPurchaseTime() string {
	if x != nil {
		return x.PurchaseTime
	}
	return ""
}

// 判断是否可以砍价
type JudgeBargainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                  // 用户id
	CryptominerTypeid int64 `protobuf:"varint,3,opt,name=cryptominer_typeid,json=cryptominerTypeid,proto3" json:"cryptominer_typeid,omitempty"` // 矿机种类ids
}

func (x *JudgeBargainRequest) Reset() {
	*x = JudgeBargainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JudgeBargainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JudgeBargainRequest) ProtoMessage() {}

func (x *JudgeBargainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JudgeBargainRequest.ProtoReflect.Descriptor instead.
func (*JudgeBargainRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{9}
}

func (x *JudgeBargainRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *JudgeBargainRequest) GetCryptominerTypeid() int64 {
	if x != nil {
		return x.CryptominerTypeid
	}
	return 0
}

// 判断是否可以砍价
type JudgeBargainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsBargain bool `protobuf:"varint,1,opt,name=is_bargain,json=isBargain,proto3" json:"is_bargain,omitempty"` // 砍价id
}

func (x *JudgeBargainResponse) Reset() {
	*x = JudgeBargainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JudgeBargainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JudgeBargainResponse) ProtoMessage() {}

func (x *JudgeBargainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JudgeBargainResponse.ProtoReflect.Descriptor instead.
func (*JudgeBargainResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{10}
}

func (x *JudgeBargainResponse) GetIsBargain() bool {
	if x != nil {
		return x.IsBargain
	}
	return false
}

// 矿机全额购买
type CryptominerPurchaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                      // 用户id
	CryptominerId int64 `protobuf:"varint,3,opt,name=cryptominer_id,json=cryptominerId,proto3" json:"cryptominer_id,omitempty"` // 商品id
}

func (x *CryptominerPurchaseRequest) Reset() {
	*x = CryptominerPurchaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptominerPurchaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptominerPurchaseRequest) ProtoMessage() {}

func (x *CryptominerPurchaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptominerPurchaseRequest.ProtoReflect.Descriptor instead.
func (*CryptominerPurchaseRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{11}
}

func (x *CryptominerPurchaseRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CryptominerPurchaseRequest) GetCryptominerId() int64 {
	if x != nil {
		return x.CryptominerId
	}
	return 0
}

// 矿机限时购买
type CryptominerBargainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                      // 用户id
	CryptominerId int64 `protobuf:"varint,3,opt,name=cryptominer_id,json=cryptominerId,proto3" json:"cryptominer_id,omitempty"` // 商品id
}

func (x *CryptominerBargainRequest) Reset() {
	*x = CryptominerBargainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptominerBargainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptominerBargainRequest) ProtoMessage() {}

func (x *CryptominerBargainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptominerBargainRequest.ProtoReflect.Descriptor instead.
func (*CryptominerBargainRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{12}
}

func (x *CryptominerBargainRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CryptominerBargainRequest) GetCryptominerId() int64 {
	if x != nil {
		return x.CryptominerId
	}
	return 0
}

// 矿机限时购买
type CryptominerBargainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BargainId int64 `protobuf:"varint,1,opt,name=bargain_id,json=bargainId,proto3" json:"bargain_id,omitempty"` // 砍价id
	IsFirst   bool  `protobuf:"varint,2,opt,name=is_first,json=isFirst,proto3" json:"is_first,omitempty"`       // 是否为第一次砍价
}

func (x *CryptominerBargainResponse) Reset() {
	*x = CryptominerBargainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptominerBargainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptominerBargainResponse) ProtoMessage() {}

func (x *CryptominerBargainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptominerBargainResponse.ProtoReflect.Descriptor instead.
func (*CryptominerBargainResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{13}
}

func (x *CryptominerBargainResponse) GetBargainId() int64 {
	if x != nil {
		return x.BargainId
	}
	return 0
}

func (x *CryptominerBargainResponse) GetIsFirst() bool {
	if x != nil {
		return x.IsFirst
	}
	return false
}

// 获取活动规则
type GetBargainRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BargainId int64 `protobuf:"varint,1,opt,name=bargain_id,json=bargainId,proto3" json:"bargain_id,omitempty"` // 砍价id
}

func (x *GetBargainRuleRequest) Reset() {
	*x = GetBargainRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBargainRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBargainRuleRequest) ProtoMessage() {}

func (x *GetBargainRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBargainRuleRequest.ProtoReflect.Descriptor instead.
func (*GetBargainRuleRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{14}
}

func (x *GetBargainRuleRequest) GetBargainId() int64 {
	if x != nil {
		return x.BargainId
	}
	return 0
}

// 获取活动规则
type GetBargainRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BargainRuleDescribe string `protobuf:"bytes,1,opt,name=bargainRuleDescribe,proto3" json:"bargainRuleDescribe,omitempty"` // 规则描述
}

func (x *GetBargainRuleResponse) Reset() {
	*x = GetBargainRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBargainRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBargainRuleResponse) ProtoMessage() {}

func (x *GetBargainRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBargainRuleResponse.ProtoReflect.Descriptor instead.
func (*GetBargainRuleResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{15}
}

func (x *GetBargainRuleResponse) GetBargainRuleDescribe() string {
	if x != nil {
		return x.BargainRuleDescribe
	}
	return ""
}

// 获取砍价商品信息
type GetBargainCryptominerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CryptominerId int64 `protobuf:"varint,1,opt,name=cryptominer_id,json=cryptominerId,proto3" json:"cryptominer_id,omitempty"` // 矿机id
}

func (x *GetBargainCryptominerRequest) Reset() {
	*x = GetBargainCryptominerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBargainCryptominerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBargainCryptominerRequest) ProtoMessage() {}

func (x *GetBargainCryptominerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBargainCryptominerRequest.ProtoReflect.Descriptor instead.
func (*GetBargainCryptominerRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{16}
}

func (x *GetBargainCryptominerRequest) GetCryptominerId() int64 {
	if x != nil {
		return x.CryptominerId
	}
	return 0
}

// 获取砍价矿机信息
type GetBargainCryptominerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CryptominerName    string `protobuf:"bytes,1,opt,name=cryptominer_name,json=cryptominerName,proto3" json:"cryptominer_name,omitempty"`          // 矿机名称
	CryptominerPicture string `protobuf:"bytes,2,opt,name=cryptominer_picture,json=cryptominerPicture,proto3" json:"cryptominer_picture,omitempty"` // 矿机图片
}

func (x *GetBargainCryptominerResponse) Reset() {
	*x = GetBargainCryptominerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBargainCryptominerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBargainCryptominerResponse) ProtoMessage() {}

func (x *GetBargainCryptominerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBargainCryptominerResponse.ProtoReflect.Descriptor instead.
func (*GetBargainCryptominerResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{17}
}

func (x *GetBargainCryptominerResponse) GetCryptominerName() string {
	if x != nil {
		return x.CryptominerName
	}
	return ""
}

func (x *GetBargainCryptominerResponse) GetCryptominerPicture() string {
	if x != nil {
		return x.CryptominerPicture
	}
	return ""
}

// 获取砍价进度
type GetBargainProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BargainId int64 `protobuf:"varint,1,opt,name=bargain_id,json=bargainId,proto3" json:"bargain_id,omitempty"` // 砍价id
}

func (x *GetBargainProgressRequest) Reset() {
	*x = GetBargainProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBargainProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBargainProgressRequest) ProtoMessage() {}

func (x *GetBargainProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBargainProgressRequest.ProtoReflect.Descriptor instead.
func (*GetBargainProgressRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{18}
}

func (x *GetBargainProgressRequest) GetBargainId() int64 {
	if x != nil {
		return x.BargainId
	}
	return 0
}

// 获取砍价进度
type GetBargainProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityStarttime string  `protobuf:"bytes,1,opt,name=activity_starttime,json=activityStarttime,proto3" json:"activity_starttime,omitempty"` // 活动开始时间
	RemainingRice     float32 `protobuf:"fixed32,2,opt,name=remaining_rice,json=remainingRice,proto3" json:"remaining_rice,omitempty"`           // 剩余金额
}

func (x *GetBargainProgressResponse) Reset() {
	*x = GetBargainProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBargainProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBargainProgressResponse) ProtoMessage() {}

func (x *GetBargainProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBargainProgressResponse.ProtoReflect.Descriptor instead.
func (*GetBargainProgressResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{19}
}

func (x *GetBargainProgressResponse) GetActivityStarttime() string {
	if x != nil {
		return x.ActivityStarttime
	}
	return ""
}

func (x *GetBargainProgressResponse) GetRemainingRice() float32 {
	if x != nil {
		return x.RemainingRice
	}
	return 0
}

// 获取砍价记录列表
type GetBargainRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BargainId int64 `protobuf:"varint,1,opt,name=bargain_id,json=bargainId,proto3" json:"bargain_id,omitempty"` // 砍价id
}

func (x *GetBargainRecordRequest) Reset() {
	*x = GetBargainRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBargainRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBargainRecordRequest) ProtoMessage() {}

func (x *GetBargainRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBargainRecordRequest.ProtoReflect.Descriptor instead.
func (*GetBargainRecordRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{20}
}

func (x *GetBargainRecordRequest) GetBargainId() int64 {
	if x != nil {
		return x.BargainId
	}
	return 0
}

// 获取砍价记录列表
type GetBargainRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cryptominer   []*Cryptominer   `protobuf:"bytes,1,rep,name=Cryptominer,proto3" json:"Cryptominer,omitempty"`     // 矿机
	BargainAmount []*BargainAmount `protobuf:"bytes,2,rep,name=BargainAmount,proto3" json:"BargainAmount,omitempty"` // 每份金额计算
	Profile       []*Profile       `protobuf:"bytes,3,rep,name=Profile,proto3" json:"Profile,omitempty"`             // 对应金额的砍价人信息
}

func (x *GetBargainRecordResponse) Reset() {
	*x = GetBargainRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBargainRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBargainRecordResponse) ProtoMessage() {}

func (x *GetBargainRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBargainRecordResponse.ProtoReflect.Descriptor instead.
func (*GetBargainRecordResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{21}
}

func (x *GetBargainRecordResponse) GetCryptominer() []*Cryptominer {
	if x != nil {
		return x.Cryptominer
	}
	return nil
}

func (x *GetBargainRecordResponse) GetBargainAmount() []*BargainAmount {
	if x != nil {
		return x.BargainAmount
	}
	return nil
}

func (x *GetBargainRecordResponse) GetProfile() []*Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

// 金额计算
type BargainAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstbargainPercentage float32 `protobuf:"fixed32,1,opt,name=firstbargain_percentage,json=firstbargainPercentage,proto3" json:"firstbargain_percentage,omitempty"` // 初次砍价百分比
	BargainMinprice        float32 `protobuf:"fixed32,2,opt,name=bargain_minprice,json=bargainMinprice,proto3" json:"bargain_minprice,omitempty"`                      // 砍价最小额度
	BargainPrice           float32 `protobuf:"fixed32,3,opt,name=bargain_price,json=bargainPrice,proto3" json:"bargain_price,omitempty"`                               // 本次砍价额度
}

func (x *BargainAmount) Reset() {
	*x = BargainAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BargainAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BargainAmount) ProtoMessage() {}

func (x *BargainAmount) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BargainAmount.ProtoReflect.Descriptor instead.
func (*BargainAmount) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{22}
}

func (x *BargainAmount) GetFirstbargainPercentage() float32 {
	if x != nil {
		return x.FirstbargainPercentage
	}
	return 0
}

func (x *BargainAmount) GetBargainMinprice() float32 {
	if x != nil {
		return x.BargainMinprice
	}
	return 0
}

func (x *BargainAmount) GetBargainPrice() float32 {
	if x != nil {
		return x.BargainPrice
	}
	return 0
}

// Profile 暂时从用户服务拿到
type Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`      // 用户id
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"` // 用户名
	Avatar   string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                     // 用户头像
}

func (x *Profile) Reset() {
	*x = Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{23}
}

func (x *Profile) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Profile) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Profile) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

var File_block_proto protoreflect.FileDescriptor

var file_block_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x1d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x69, 0x6e, 0x67, 0x22, 0x1e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x22, 0xac, 0x02, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f,
	0x0a, 0x13, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x31, 0x0a, 0x14, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x31, 0x0a, 0x14, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x11, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xba, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x70, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x22, 0x2e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x43,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x52, 0x0b, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x04, 0x50, 0x72, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x52, 0x04, 0x50, 0x72,
	0x6f, 0x70, 0x22, 0xe3, 0x04, 0x0a, 0x0b, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x69,
	0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x13,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x31, 0x0a,
	0x14, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x77, 0x61, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x57, 0x61, 0x79, 0x12, 0x34, 0x0a,
	0x16, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x45, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x14, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x82, 0x02, 0x0a, 0x04, 0x50, 0x72, 0x6f,
	0x70, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x50, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x70, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5d, 0x0a,
	0x13, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a,
	0x12, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x14,
	0x4a, 0x75, 0x64, 0x67, 0x65, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x62, 0x61, 0x72, 0x67, 0x61,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x42, 0x61, 0x72, 0x67,
	0x61, 0x69, 0x6e, 0x22, 0x5c, 0x0a, 0x1a, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x5b, 0x0a, 0x19, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x56,
	0x0a, 0x1a, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x42, 0x61, 0x72,
	0x67, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x73, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x46, 0x69, 0x72, 0x73, 0x74, 0x22, 0x36, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x61, 0x72,
	0x67, 0x61, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x4a,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x62, 0x61, 0x72, 0x67,
	0x61, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x75,
	0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0x45, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x7b, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x43,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a,
	0x13, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x22, 0x3a,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x72, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0d, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x69, 0x63, 0x65, 0x22, 0x38,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x72,
	0x67, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62,
	0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0xb6, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x0b,
	0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x0d, 0x42,
	0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x42, 0x61, 0x72, 0x67, 0x61,
	0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0d, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69,
	0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x22, 0x98, 0x01, 0x0a, 0x0d, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x17, 0x66, 0x69, 0x72, 0x73, 0x74, 0x62, 0x61, 0x72, 0x67,
	0x61, 0x69, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x16, 0x66, 0x69, 0x72, 0x73, 0x74, 0x62, 0x61, 0x72, 0x67, 0x61,
	0x69, 0x6e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x4d,
	0x69, 0x6e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x61, 0x72, 0x67, 0x61,
	0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c,
	0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x57, 0x0a, 0x07,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x32, 0xf2, 0x06, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x27, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x1f, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x12, 0x18, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x42, 0x61, 0x72, 0x67,
	0x61, 0x69, 0x6e, 0x12, 0x1a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4a, 0x75, 0x64, 0x67,
	0x65, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x42, 0x61, 0x72,
	0x67, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x17,
	0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x6c, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x21, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x1a, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69,
	0x6e, 0x65, 0x72, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x12, 0x20, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x61,
	0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x61, 0x72,
	0x67, 0x61, 0x69, 0x6e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x12,
	0x23, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x72, 0x67, 0x61,
	0x69, 0x6e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x20, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x72, 0x67,
	0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61,
	0x72, 0x67, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x61, 0x72, 0x67,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_block_proto_rawDescOnce sync.Once
	file_block_proto_rawDescData = file_block_proto_rawDesc
)

func file_block_proto_rawDescGZIP() []byte {
	file_block_proto_rawDescOnce.Do(func() {
		file_block_proto_rawDescData = protoimpl.X.CompressGZIP(file_block_proto_rawDescData)
	})
	return file_block_proto_rawDescData
}

var file_block_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_block_proto_goTypes = []interface{}{
	(*Request)(nil),                       // 0: block.Request
	(*Response)(nil),                      // 1: block.Response
	(*CreateCryptominerRequest)(nil),      // 2: block.CreateCryptominerRequest
	(*IsSuccessResponse)(nil),             // 3: block.IsSuccessResponse
	(*CreatePropRequest)(nil),             // 4: block.CreatePropRequest
	(*GetGoodsListRequest)(nil),           // 5: block.GetGoodsListRequest
	(*GetGoodsListResponse)(nil),          // 6: block.GetGoodsListResponse
	(*Cryptominer)(nil),                   // 7: block.Cryptominer
	(*Prop)(nil),                          // 8: block.Prop
	(*JudgeBargainRequest)(nil),           // 9: block.JudgeBargainRequest
	(*JudgeBargainResponse)(nil),          // 10: block.JudgeBargainResponse
	(*CryptominerPurchaseRequest)(nil),    // 11: block.CryptominerPurchaseRequest
	(*CryptominerBargainRequest)(nil),     // 12: block.CryptominerBargainRequest
	(*CryptominerBargainResponse)(nil),    // 13: block.CryptominerBargainResponse
	(*GetBargainRuleRequest)(nil),         // 14: block.GetBargainRuleRequest
	(*GetBargainRuleResponse)(nil),        // 15: block.GetBargainRuleResponse
	(*GetBargainCryptominerRequest)(nil),  // 16: block.GetBargainCryptominerRequest
	(*GetBargainCryptominerResponse)(nil), // 17: block.GetBargainCryptominerResponse
	(*GetBargainProgressRequest)(nil),     // 18: block.GetBargainProgressRequest
	(*GetBargainProgressResponse)(nil),    // 19: block.GetBargainProgressResponse
	(*GetBargainRecordRequest)(nil),       // 20: block.GetBargainRecordRequest
	(*GetBargainRecordResponse)(nil),      // 21: block.GetBargainRecordResponse
	(*BargainAmount)(nil),                 // 22: block.BargainAmount
	(*Profile)(nil),                       // 23: block.Profile
}
var file_block_proto_depIdxs = []int32{
	7,  // 0: block.GetGoodsListResponse.Cryptominer:type_name -> block.Cryptominer
	8,  // 1: block.GetGoodsListResponse.Prop:type_name -> block.Prop
	7,  // 2: block.GetBargainRecordResponse.Cryptominer:type_name -> block.Cryptominer
	22, // 3: block.GetBargainRecordResponse.BargainAmount:type_name -> block.BargainAmount
	23, // 4: block.GetBargainRecordResponse.Profile:type_name -> block.Profile
	0,  // 5: block.Block.Ping:input_type -> block.Request
	2,  // 6: block.Block.CreateCryptominer:input_type -> block.CreateCryptominerRequest
	4,  // 7: block.Block.CreateProp:input_type -> block.CreatePropRequest
	5,  // 8: block.Block.GetGoodsList:input_type -> block.GetGoodsListRequest
	9,  // 9: block.Block.JudgeBargain:input_type -> block.JudgeBargainRequest
	11, // 10: block.Block.CryptominerFullPurchase:input_type -> block.CryptominerPurchaseRequest
	12, // 11: block.Block.CryptominerBargainPurchase:input_type -> block.CryptominerBargainRequest
	14, // 12: block.Block.GetBargainRule:input_type -> block.GetBargainRuleRequest
	16, // 13: block.Block.GetBargainCryptominer:input_type -> block.GetBargainCryptominerRequest
	18, // 14: block.Block.GetBargainProgress:input_type -> block.GetBargainProgressRequest
	20, // 15: block.Block.GetBargainRecord:input_type -> block.GetBargainRecordRequest
	1,  // 16: block.Block.Ping:output_type -> block.Response
	3,  // 17: block.Block.CreateCryptominer:output_type -> block.IsSuccessResponse
	3,  // 18: block.Block.CreateProp:output_type -> block.IsSuccessResponse
	6,  // 19: block.Block.GetGoodsList:output_type -> block.GetGoodsListResponse
	10, // 20: block.Block.JudgeBargain:output_type -> block.JudgeBargainResponse
	3,  // 21: block.Block.CryptominerFullPurchase:output_type -> block.IsSuccessResponse
	13, // 22: block.Block.CryptominerBargainPurchase:output_type -> block.CryptominerBargainResponse
	15, // 23: block.Block.GetBargainRule:output_type -> block.GetBargainRuleResponse
	17, // 24: block.Block.GetBargainCryptominer:output_type -> block.GetBargainCryptominerResponse
	19, // 25: block.Block.GetBargainProgress:output_type -> block.GetBargainProgressResponse
	21, // 26: block.Block.GetBargainRecord:output_type -> block.GetBargainRecordResponse
	16, // [16:27] is the sub-list for method output_type
	5,  // [5:16] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_block_proto_init() }
func file_block_proto_init() {
	if File_block_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_block_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCryptominerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsSuccessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePropRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodsListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodsListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cryptominer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JudgeBargainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JudgeBargainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptominerPurchaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptominerBargainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptominerBargainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBargainRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBargainRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBargainCryptominerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBargainCryptominerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBargainProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBargainProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBargainRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBargainRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BargainAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_block_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_block_proto_goTypes,
		DependencyIndexes: file_block_proto_depIdxs,
		MessageInfos:      file_block_proto_msgTypes,
	}.Build()
	File_block_proto = out.File
	file_block_proto_rawDesc = nil
	file_block_proto_goTypes = nil
	file_block_proto_depIdxs = nil
}
