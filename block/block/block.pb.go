// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.4
// source: block.proto

package block

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ping string `protobuf:"bytes,1,opt,name=ping,proto3" json:"ping,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetPing() string {
	if x != nil {
		return x.Ping
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{1}
}

func (x *Response) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 管理系统创建矿机
type CreateCryptominerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminuserId         int64  `protobuf:"varint,1,opt,name=adminuser_id,json=adminuserId,proto3" json:"adminuser_id,omitempty"`                         // 创建者id
	CryptominerName     string `protobuf:"bytes,2,opt,name=cryptominer_name,json=cryptominerName,proto3" json:"cryptominer_name,omitempty"`              // 矿机名称
	CryptominerPicture  string `protobuf:"bytes,3,opt,name=cryptominer_picture,json=cryptominerPicture,proto3" json:"cryptominer_picture,omitempty"`     // 矿机图片
	CryptominerDescribe string `protobuf:"bytes,4,opt,name=cryptominer_describe,json=cryptominerDescribe,proto3" json:"cryptominer_describe,omitempty"`  // 矿机描述
	CryptominerPrice    int64  `protobuf:"varint,5,opt,name=cryptominer_price,json=cryptominerPrice,proto3" json:"cryptominer_price,omitempty"`          // 矿机价格
	CryptominerDuration int64  `protobuf:"varint,6,opt,name=cryptominer_duration,json=cryptominerDuration,proto3" json:"cryptominer_duration,omitempty"` // 矿机运作时间
	CryptominerPower    int64  `protobuf:"varint,7,opt,name=cryptominer_power,json=cryptominerPower,proto3" json:"cryptominer_power,omitempty"`          // 矿机算力
	PaymentWay          string `protobuf:"bytes,8,opt,name=payment_way,json=paymentWay,proto3" json:"payment_way,omitempty"`                             // 支付方式 0：U ,1:ADF
	GoodStatus          string `protobuf:"bytes,9,opt,name=good_status,json=goodStatus,proto3" json:"good_status,omitempty"`                             // 商品状态  0：待上架  1：已上架 2：未上架
}

func (x *CreateCryptominerRequest) Reset() {
	*x = CreateCryptominerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCryptominerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCryptominerRequest) ProtoMessage() {}

func (x *CreateCryptominerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCryptominerRequest.ProtoReflect.Descriptor instead.
func (*CreateCryptominerRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCryptominerRequest) GetAdminuserId() int64 {
	if x != nil {
		return x.AdminuserId
	}
	return 0
}

func (x *CreateCryptominerRequest) GetCryptominerName() string {
	if x != nil {
		return x.CryptominerName
	}
	return ""
}

func (x *CreateCryptominerRequest) GetCryptominerPicture() string {
	if x != nil {
		return x.CryptominerPicture
	}
	return ""
}

func (x *CreateCryptominerRequest) GetCryptominerDescribe() string {
	if x != nil {
		return x.CryptominerDescribe
	}
	return ""
}

func (x *CreateCryptominerRequest) GetCryptominerPrice() int64 {
	if x != nil {
		return x.CryptominerPrice
	}
	return 0
}

func (x *CreateCryptominerRequest) GetCryptominerDuration() int64 {
	if x != nil {
		return x.CryptominerDuration
	}
	return 0
}

func (x *CreateCryptominerRequest) GetCryptominerPower() int64 {
	if x != nil {
		return x.CryptominerPower
	}
	return 0
}

func (x *CreateCryptominerRequest) GetPaymentWay() string {
	if x != nil {
		return x.PaymentWay
	}
	return ""
}

func (x *CreateCryptominerRequest) GetGoodStatus() string {
	if x != nil {
		return x.GoodStatus
	}
	return ""
}

// 响应
type IsSuccessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"` // 创建成功
}

func (x *IsSuccessResponse) Reset() {
	*x = IsSuccessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsSuccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsSuccessResponse) ProtoMessage() {}

func (x *IsSuccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsSuccessResponse.ProtoReflect.Descriptor instead.
func (*IsSuccessResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{3}
}

func (x *IsSuccessResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

// 管理系统创建道具
type CreatePropRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminuserId  int64  `protobuf:"varint,1,opt,name=adminuser_id,json=adminuserId,proto3" json:"adminuser_id,omitempty"`   // 创建者id
	PropName     string `protobuf:"bytes,2,opt,name=prop_name,json=propName,proto3" json:"prop_name,omitempty"`             // 矿机名称
	PropPicture  string `protobuf:"bytes,3,opt,name=prop_picture,json=propPicture,proto3" json:"prop_picture,omitempty"`    // 矿机图片
	PropDescribe string `protobuf:"bytes,4,opt,name=prop_describe,json=propDescribe,proto3" json:"prop_describe,omitempty"` // 矿机描述
	PropPrice    int64  `protobuf:"varint,5,opt,name=prop_price,json=propPrice,proto3" json:"prop_price,omitempty"`         // 矿机价格
	PaymentWay   string `protobuf:"bytes,6,opt,name=payment_way,json=paymentWay,proto3" json:"payment_way,omitempty"`       // 支付方式 0：U ,1:ADF
	GoodStatus   string `protobuf:"bytes,9,opt,name=good_status,json=goodStatus,proto3" json:"good_status,omitempty"`       // 商品状态  0：待上架  1：已上架 2：未上架
}

func (x *CreatePropRequest) Reset() {
	*x = CreatePropRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePropRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePropRequest) ProtoMessage() {}

func (x *CreatePropRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePropRequest.ProtoReflect.Descriptor instead.
func (*CreatePropRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{4}
}

func (x *CreatePropRequest) GetAdminuserId() int64 {
	if x != nil {
		return x.AdminuserId
	}
	return 0
}

func (x *CreatePropRequest) GetPropName() string {
	if x != nil {
		return x.PropName
	}
	return ""
}

func (x *CreatePropRequest) GetPropPicture() string {
	if x != nil {
		return x.PropPicture
	}
	return ""
}

func (x *CreatePropRequest) GetPropDescribe() string {
	if x != nil {
		return x.PropDescribe
	}
	return ""
}

func (x *CreatePropRequest) GetPropPrice() int64 {
	if x != nil {
		return x.PropPrice
	}
	return 0
}

func (x *CreatePropRequest) GetPaymentWay() string {
	if x != nil {
		return x.PaymentWay
	}
	return ""
}

func (x *CreatePropRequest) GetGoodStatus() string {
	if x != nil {
		return x.GoodStatus
	}
	return ""
}

// 管理系统创建矿机活动
type CreateActivityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminuserId       int64   `protobuf:"varint,1,opt,name=adminuser_id,json=adminuserId,proto3" json:"adminuser_id,omitempty"`                   // 创建者id
	CryptominerTypeid int64   `protobuf:"varint,2,opt,name=cryptominer_typeid,json=cryptominerTypeid,proto3" json:"cryptominer_typeid,omitempty"` // 关联矿机种类id
	UserAmount        int64   `protobuf:"varint,3,opt,name=user_amount,json=userAmount,proto3" json:"user_amount,omitempty"`                      // 砍价人数
	MinPrice          float32 `protobuf:"fixed32,4,opt,name=min_price,json=minPrice,proto3" json:"min_price,omitempty"`                           // 最小砍价金额
	FirstBargainPer   float32 `protobuf:"fixed32,5,opt,name=first_bargain_per,json=firstBargainPer,proto3" json:"first_bargain_per,omitempty"`    // 首次砍价百分比
	FriendBargainPer  float32 `protobuf:"fixed32,6,opt,name=friend_bargain_per,json=friendBargainPer,proto3" json:"friend_bargain_per,omitempty"` // 好友砍价比率
}

func (x *CreateActivityRequest) Reset() {
	*x = CreateActivityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateActivityRequest) ProtoMessage() {}

func (x *CreateActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateActivityRequest.ProtoReflect.Descriptor instead.
func (*CreateActivityRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{5}
}

func (x *CreateActivityRequest) GetAdminuserId() int64 {
	if x != nil {
		return x.AdminuserId
	}
	return 0
}

func (x *CreateActivityRequest) GetCryptominerTypeid() int64 {
	if x != nil {
		return x.CryptominerTypeid
	}
	return 0
}

func (x *CreateActivityRequest) GetUserAmount() int64 {
	if x != nil {
		return x.UserAmount
	}
	return 0
}

func (x *CreateActivityRequest) GetMinPrice() float32 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *CreateActivityRequest) GetFirstBargainPer() float32 {
	if x != nil {
		return x.FirstBargainPer
	}
	return 0
}

func (x *CreateActivityRequest) GetFriendBargainPer() float32 {
	if x != nil {
		return x.FriendBargainPer
	}
	return 0
}

// 开启系统矿机活动
type StartActivityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId int64 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"` // 关联矿机种类id
}

func (x *StartActivityRequest) Reset() {
	*x = StartActivityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActivityRequest) ProtoMessage() {}

func (x *StartActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActivityRequest.ProtoReflect.Descriptor instead.
func (*StartActivityRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{6}
}

func (x *StartActivityRequest) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

// 上架商品道具
type StartGoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodTypeid int64 `protobuf:"varint,1,opt,name=good_typeid,json=goodTypeid,proto3" json:"good_typeid,omitempty"` // 商品种类id
}

func (x *StartGoodRequest) Reset() {
	*x = StartGoodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartGoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGoodRequest) ProtoMessage() {}

func (x *StartGoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGoodRequest.ProtoReflect.Descriptor instead.
func (*StartGoodRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{7}
}

func (x *StartGoodRequest) GetGoodTypeid() int64 {
	if x != nil {
		return x.GoodTypeid
	}
	return 0
}

// 管理系统获取活动列表
type AdminActivityListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AdminActivityListRequest) Reset() {
	*x = AdminActivityListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminActivityListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminActivityListRequest) ProtoMessage() {}

func (x *AdminActivityListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminActivityListRequest.ProtoReflect.Descriptor instead.
func (*AdminActivityListRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{8}
}

func (x *AdminActivityListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 管理系统获取活动列表
type AdminActivityListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activity []*Activity `protobuf:"bytes,1,rep,name=Activity,proto3" json:"Activity,omitempty"`
}

func (x *AdminActivityListResponse) Reset() {
	*x = AdminActivityListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminActivityListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminActivityListResponse) ProtoMessage() {}

func (x *AdminActivityListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminActivityListResponse.ProtoReflect.Descriptor instead.
func (*AdminActivityListResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{9}
}

func (x *AdminActivityListResponse) GetActivity() []*Activity {
	if x != nil {
		return x.Activity
	}
	return nil
}

type Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId       int64   `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`                      // 关联矿机种类id
	CryptominerName  string  `protobuf:"bytes,2,opt,name=cryptominer_name,json=cryptominerName,proto3" json:"cryptominer_name,omitempty"`        // 矿机名称
	UserAmount       int64   `protobuf:"varint,3,opt,name=user_amount,json=userAmount,proto3" json:"user_amount,omitempty"`                      // 砍价人数
	MinPrice         float32 `protobuf:"fixed32,4,opt,name=min_price,json=minPrice,proto3" json:"min_price,omitempty"`                           // 最小砍价金额
	FirstBargainPer  float32 `protobuf:"fixed32,5,opt,name=first_bargain_per,json=firstBargainPer,proto3" json:"first_bargain_per,omitempty"`    // 首次砍价百分比
	FriendBargainPer float32 `protobuf:"fixed32,6,opt,name=friend_bargain_per,json=friendBargainPer,proto3" json:"friend_bargain_per,omitempty"` // 好友砍价比率
	IsActivation     int64   `protobuf:"varint,7,opt,name=is_activation,json=isActivation,proto3" json:"is_activation,omitempty"`                // 矿机状态  0：未开启  1：开启
}

func (x *Activity) Reset() {
	*x = Activity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{10}
}

func (x *Activity) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *Activity) GetCryptominerName() string {
	if x != nil {
		return x.CryptominerName
	}
	return ""
}

func (x *Activity) GetUserAmount() int64 {
	if x != nil {
		return x.UserAmount
	}
	return 0
}

func (x *Activity) GetMinPrice() float32 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *Activity) GetFirstBargainPer() float32 {
	if x != nil {
		return x.FirstBargainPer
	}
	return 0
}

func (x *Activity) GetFriendBargainPer() float32 {
	if x != nil {
		return x.FriendBargainPer
	}
	return 0
}

func (x *Activity) GetIsActivation() int64 {
	if x != nil {
		return x.IsActivation
	}
	return 0
}

// 管理系统获取活动列表
type AdminGoodListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AdminGoodListRequest) Reset() {
	*x = AdminGoodListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGoodListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGoodListRequest) ProtoMessage() {}

func (x *AdminGoodListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGoodListRequest.ProtoReflect.Descriptor instead.
func (*AdminGoodListRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{11}
}

func (x *AdminGoodListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 管理系统获取活动列表
type AdminGoodListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminGood []*AdminGood `protobuf:"bytes,1,rep,name=AdminGood,proto3" json:"AdminGood,omitempty"`
}

func (x *AdminGoodListResponse) Reset() {
	*x = AdminGoodListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGoodListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGoodListResponse) ProtoMessage() {}

func (x *AdminGoodListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGoodListResponse.ProtoReflect.Descriptor instead.
func (*AdminGoodListResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{12}
}

func (x *AdminGoodListResponse) GetAdminGood() []*AdminGood {
	if x != nil {
		return x.AdminGood
	}
	return nil
}

type AdminGood struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodTypeid   int64  `protobuf:"varint,1,opt,name=good_typeid,json=goodTypeid,proto3" json:"good_typeid,omitempty"`       // 商品typeid
	GoodName     string `protobuf:"bytes,2,opt,name=good_name,json=goodName,proto3" json:"good_name,omitempty"`              // 商品名称
	GoodDuration int64  `protobuf:"varint,3,opt,name=good_duration,json=goodDuration,proto3" json:"good_duration,omitempty"` // 商品工作时长
	PaymentWay   string `protobuf:"bytes,4,opt,name=payment_way,json=paymentWay,proto3" json:"payment_way,omitempty"`        // 支付方式 0：U ,1:ADF
	PropPrice    int64  `protobuf:"varint,5,opt,name=prop_price,json=propPrice,proto3" json:"prop_price,omitempty"`          // 商品价格
	GoodStatus   string `protobuf:"bytes,6,opt,name=good_status,json=goodStatus,proto3" json:"good_status,omitempty"`        // 商品状态  0：待上架  1：已上架 2：未上架
}

func (x *AdminGood) Reset() {
	*x = AdminGood{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGood) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGood) ProtoMessage() {}

func (x *AdminGood) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGood.ProtoReflect.Descriptor instead.
func (*AdminGood) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{13}
}

func (x *AdminGood) GetGoodTypeid() int64 {
	if x != nil {
		return x.GoodTypeid
	}
	return 0
}

func (x *AdminGood) GetGoodName() string {
	if x != nil {
		return x.GoodName
	}
	return ""
}

func (x *AdminGood) GetGoodDuration() int64 {
	if x != nil {
		return x.GoodDuration
	}
	return 0
}

func (x *AdminGood) GetPaymentWay() string {
	if x != nil {
		return x.PaymentWay
	}
	return ""
}

func (x *AdminGood) GetPropPrice() int64 {
	if x != nil {
		return x.PropPrice
	}
	return 0
}

func (x *AdminGood) GetGoodStatus() string {
	if x != nil {
		return x.GoodStatus
	}
	return ""
}

// 获取商城列表
type GetGoodsListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetGoodsListRequest) Reset() {
	*x = GetGoodsListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodsListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodsListRequest) ProtoMessage() {}

func (x *GetGoodsListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodsListRequest.ProtoReflect.Descriptor instead.
func (*GetGoodsListRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{14}
}

func (x *GetGoodsListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 获取商城列表
type GetGoodsListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cryptominer []*Cryptominer `protobuf:"bytes,1,rep,name=Cryptominer,proto3" json:"Cryptominer,omitempty"`
	Prop        []*Prop        `protobuf:"bytes,2,rep,name=Prop,proto3" json:"Prop,omitempty"`
}

func (x *GetGoodsListResponse) Reset() {
	*x = GetGoodsListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodsListResponse) ProtoMessage() {}

func (x *GetGoodsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodsListResponse.ProtoReflect.Descriptor instead.
func (*GetGoodsListResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{15}
}

func (x *GetGoodsListResponse) GetCryptominer() []*Cryptominer {
	if x != nil {
		return x.Cryptominer
	}
	return nil
}

func (x *GetGoodsListResponse) GetProp() []*Prop {
	if x != nil {
		return x.Prop
	}
	return nil
}

// 矿机
type Cryptominer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CryptominerId        int64  `protobuf:"varint,1,opt,name=cryptominer_id,json=cryptominerId,proto3" json:"cryptominer_id,omitempty"` // ID
	UserId               int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CryptominerTypeid    int64  `protobuf:"varint,3,opt,name=cryptominer_typeid,json=cryptominerTypeid,proto3" json:"cryptominer_typeid,omitempty"`            // 矿机种类id
	CryptominerName      string `protobuf:"bytes,4,opt,name=cryptominer_name,json=cryptominerName,proto3" json:"cryptominer_name,omitempty"`                   // 矿机名称
	CryptominerPicture   string `protobuf:"bytes,5,opt,name=cryptominer_picture,json=cryptominerPicture,proto3" json:"cryptominer_picture,omitempty"`          // 矿机图片
	CryptominerDescribe  string `protobuf:"bytes,6,opt,name=cryptominer_describe,json=cryptominerDescribe,proto3" json:"cryptominer_describe,omitempty"`       // 矿机描述
	CryptominerPrice     int64  `protobuf:"varint,7,opt,name=cryptominer_price,json=cryptominerPrice,proto3" json:"cryptominer_price,omitempty"`               // 矿机价格
	OptionalStatus       string `protobuf:"bytes,8,opt,name=optional_status,json=optionalStatus,proto3" json:"optional_status,omitempty"`                      // 矿机状态 0：未购买 1：工作中 2：已失效 3：砍价中
	PurchaseTime         string `protobuf:"bytes,9,opt,name=purchase_time,json=purchaseTime,proto3" json:"purchase_time,omitempty"`                            // 购买时间
	IsBargain            bool   `protobuf:"varint,10,opt,name=is_bargain,json=isBargain,proto3" json:"is_bargain,omitempty"`                                   // 是否可砍
	PurchaseWay          string `protobuf:"bytes,11,opt,name=purchase_way,json=purchaseWay,proto3" json:"purchase_way,omitempty"`                              // 购买方式 0：全额购买 1：限时砍价
	CryptominerStartTime string `protobuf:"bytes,12,opt,name=cryptominer_start_time,json=cryptominerStartTime,proto3" json:"cryptominer_start_time,omitempty"` // 矿机开始运作时间
	CryptominerEndTime   string `protobuf:"bytes,13,opt,name=cryptominer_end_time,json=cryptominerEndTime,proto3" json:"cryptominer_end_time,omitempty"`       // 矿机失效时间
	CryptominerDuration  int64  `protobuf:"varint,14,opt,name=cryptominer_duration,json=cryptominerDuration,proto3" json:"cryptominer_duration,omitempty"`     // 矿机运作时间
	CryptominerPower     int64  `protobuf:"varint,15,opt,name=cryptominer_power,json=cryptominerPower,proto3" json:"cryptominer_power,omitempty"`              // 矿机算力
	PaymentWay           string `protobuf:"bytes,16,opt,name=payment_way,json=paymentWay,proto3" json:"payment_way,omitempty"`                                 // 支付方式 0：U ,1:ADF
}

func (x *Cryptominer) Reset() {
	*x = Cryptominer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cryptominer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cryptominer) ProtoMessage() {}

func (x *Cryptominer) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cryptominer.ProtoReflect.Descriptor instead.
func (*Cryptominer) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{16}
}

func (x *Cryptominer) GetCryptominerId() int64 {
	if x != nil {
		return x.CryptominerId
	}
	return 0
}

func (x *Cryptominer) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Cryptominer) GetCryptominerTypeid() int64 {
	if x != nil {
		return x.CryptominerTypeid
	}
	return 0
}

func (x *Cryptominer) GetCryptominerName() string {
	if x != nil {
		return x.CryptominerName
	}
	return ""
}

func (x *Cryptominer) GetCryptominerPicture() string {
	if x != nil {
		return x.CryptominerPicture
	}
	return ""
}

func (x *Cryptominer) GetCryptominerDescribe() string {
	if x != nil {
		return x.CryptominerDescribe
	}
	return ""
}

func (x *Cryptominer) GetCryptominerPrice() int64 {
	if x != nil {
		return x.CryptominerPrice
	}
	return 0
}

func (x *Cryptominer) GetOptionalStatus() string {
	if x != nil {
		return x.OptionalStatus
	}
	return ""
}

func (x *Cryptominer) GetPurchaseTime() string {
	if x != nil {
		return x.PurchaseTime
	}
	return ""
}

func (x *Cryptominer) GetIsBargain() bool {
	if x != nil {
		return x.IsBargain
	}
	return false
}

func (x *Cryptominer) GetPurchaseWay() string {
	if x != nil {
		return x.PurchaseWay
	}
	return ""
}

func (x *Cryptominer) GetCryptominerStartTime() string {
	if x != nil {
		return x.CryptominerStartTime
	}
	return ""
}

func (x *Cryptominer) GetCryptominerEndTime() string {
	if x != nil {
		return x.CryptominerEndTime
	}
	return ""
}

func (x *Cryptominer) GetCryptominerDuration() int64 {
	if x != nil {
		return x.CryptominerDuration
	}
	return 0
}

func (x *Cryptominer) GetCryptominerPower() int64 {
	if x != nil {
		return x.CryptominerPower
	}
	return 0
}

func (x *Cryptominer) GetPaymentWay() string {
	if x != nil {
		return x.PaymentWay
	}
	return ""
}

// 道具
type Prop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropId       int64  `protobuf:"varint,1,opt,name=prop_id,json=propId,proto3" json:"prop_id,omitempty"` // ID
	UserId       int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PropTypeid   int64  `protobuf:"varint,3,opt,name=prop_typeid,json=propTypeid,proto3" json:"prop_typeid,omitempty"`      // 道具种类id
	PropName     string `protobuf:"bytes,4,opt,name=prop_name,json=propName,proto3" json:"prop_name,omitempty"`             // 道具名称
	PropPicture  string `protobuf:"bytes,5,opt,name=prop_picture,json=propPicture,proto3" json:"prop_picture,omitempty"`    // 道具图片
	PropDescribe string `protobuf:"bytes,6,opt,name=prop_describe,json=propDescribe,proto3" json:"prop_describe,omitempty"` // 道具描述
	PropPrice    int64  `protobuf:"varint,7,opt,name=prop_price,json=propPrice,proto3" json:"prop_price,omitempty"`         // 道具价格
	PurchaseTime string `protobuf:"bytes,8,opt,name=purchase_time,json=purchaseTime,proto3" json:"purchase_time,omitempty"` // 购买时间
	PaymentWay   string `protobuf:"bytes,9,opt,name=payment_way,json=paymentWay,proto3" json:"payment_way,omitempty"`       // 支付方式 0：U ,1:ADF
}

func (x *Prop) Reset() {
	*x = Prop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prop) ProtoMessage() {}

func (x *Prop) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prop.ProtoReflect.Descriptor instead.
func (*Prop) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{17}
}

func (x *Prop) GetPropId() int64 {
	if x != nil {
		return x.PropId
	}
	return 0
}

func (x *Prop) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Prop) GetPropTypeid() int64 {
	if x != nil {
		return x.PropTypeid
	}
	return 0
}

func (x *Prop) GetPropName() string {
	if x != nil {
		return x.PropName
	}
	return ""
}

func (x *Prop) GetPropPicture() string {
	if x != nil {
		return x.PropPicture
	}
	return ""
}

func (x *Prop) GetPropDescribe() string {
	if x != nil {
		return x.PropDescribe
	}
	return ""
}

func (x *Prop) GetPropPrice() int64 {
	if x != nil {
		return x.PropPrice
	}
	return 0
}

func (x *Prop) GetPurchaseTime() string {
	if x != nil {
		return x.PurchaseTime
	}
	return ""
}

func (x *Prop) GetPaymentWay() string {
	if x != nil {
		return x.PaymentWay
	}
	return ""
}

// 判断是否可以砍价
type JudgeBargainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                  // 用户id
	CryptominerTypeid int64 `protobuf:"varint,3,opt,name=cryptominer_typeid,json=cryptominerTypeid,proto3" json:"cryptominer_typeid,omitempty"` // 矿机种类ids
}

func (x *JudgeBargainRequest) Reset() {
	*x = JudgeBargainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JudgeBargainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JudgeBargainRequest) ProtoMessage() {}

func (x *JudgeBargainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JudgeBargainRequest.ProtoReflect.Descriptor instead.
func (*JudgeBargainRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{18}
}

func (x *JudgeBargainRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *JudgeBargainRequest) GetCryptominerTypeid() int64 {
	if x != nil {
		return x.CryptominerTypeid
	}
	return 0
}

// 判断是否可以砍价
type JudgeBargainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsBargain bool `protobuf:"varint,1,opt,name=is_bargain,json=isBargain,proto3" json:"is_bargain,omitempty"` // 砍价id
}

func (x *JudgeBargainResponse) Reset() {
	*x = JudgeBargainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JudgeBargainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JudgeBargainResponse) ProtoMessage() {}

func (x *JudgeBargainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JudgeBargainResponse.ProtoReflect.Descriptor instead.
func (*JudgeBargainResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{19}
}

func (x *JudgeBargainResponse) GetIsBargain() bool {
	if x != nil {
		return x.IsBargain
	}
	return false
}

// 矿机全额购买
type CryptominerPurchaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                      // 用户id
	CryptominerId int64 `protobuf:"varint,3,opt,name=cryptominer_id,json=cryptominerId,proto3" json:"cryptominer_id,omitempty"` // 商品id
}

func (x *CryptominerPurchaseRequest) Reset() {
	*x = CryptominerPurchaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptominerPurchaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptominerPurchaseRequest) ProtoMessage() {}

func (x *CryptominerPurchaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptominerPurchaseRequest.ProtoReflect.Descriptor instead.
func (*CryptominerPurchaseRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{20}
}

func (x *CryptominerPurchaseRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CryptominerPurchaseRequest) GetCryptominerId() int64 {
	if x != nil {
		return x.CryptominerId
	}
	return 0
}

// 矿机限时购买
type CryptominerBargainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                      // 用户id
	CryptominerId int64 `protobuf:"varint,3,opt,name=cryptominer_id,json=cryptominerId,proto3" json:"cryptominer_id,omitempty"` // 商品id
}

func (x *CryptominerBargainRequest) Reset() {
	*x = CryptominerBargainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptominerBargainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptominerBargainRequest) ProtoMessage() {}

func (x *CryptominerBargainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptominerBargainRequest.ProtoReflect.Descriptor instead.
func (*CryptominerBargainRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{21}
}

func (x *CryptominerBargainRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CryptominerBargainRequest) GetCryptominerId() int64 {
	if x != nil {
		return x.CryptominerId
	}
	return 0
}

// 道具购买
type PropPurchaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                   // 用户id
	PropId       int64 `protobuf:"varint,2,opt,name=prop_id,json=propId,proto3" json:"prop_id,omitempty"`                   // 商品id
	GoodQuantity int64 `protobuf:"varint,3,opt,name=good_quantity,json=goodQuantity,proto3" json:"good_quantity,omitempty"` // 购买数量
}

func (x *PropPurchaseRequest) Reset() {
	*x = PropPurchaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropPurchaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropPurchaseRequest) ProtoMessage() {}

func (x *PropPurchaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropPurchaseRequest.ProtoReflect.Descriptor instead.
func (*PropPurchaseRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{22}
}

func (x *PropPurchaseRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PropPurchaseRequest) GetPropId() int64 {
	if x != nil {
		return x.PropId
	}
	return 0
}

func (x *PropPurchaseRequest) GetGoodQuantity() int64 {
	if x != nil {
		return x.GoodQuantity
	}
	return 0
}

// 矿机限时购买
type CryptominerBargainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BargainId int64 `protobuf:"varint,1,opt,name=bargain_id,json=bargainId,proto3" json:"bargain_id,omitempty"` // 砍价id
	IsFirst   bool  `protobuf:"varint,2,opt,name=is_first,json=isFirst,proto3" json:"is_first,omitempty"`       // 是否为第一次砍价
}

func (x *CryptominerBargainResponse) Reset() {
	*x = CryptominerBargainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptominerBargainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptominerBargainResponse) ProtoMessage() {}

func (x *CryptominerBargainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptominerBargainResponse.ProtoReflect.Descriptor instead.
func (*CryptominerBargainResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{23}
}

func (x *CryptominerBargainResponse) GetBargainId() int64 {
	if x != nil {
		return x.BargainId
	}
	return 0
}

func (x *CryptominerBargainResponse) GetIsFirst() bool {
	if x != nil {
		return x.IsFirst
	}
	return false
}

// 获取活动规则
type GetBargainRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BargainId int64 `protobuf:"varint,1,opt,name=bargain_id,json=bargainId,proto3" json:"bargain_id,omitempty"` // 砍价id
}

func (x *GetBargainRuleRequest) Reset() {
	*x = GetBargainRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBargainRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBargainRuleRequest) ProtoMessage() {}

func (x *GetBargainRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBargainRuleRequest.ProtoReflect.Descriptor instead.
func (*GetBargainRuleRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{24}
}

func (x *GetBargainRuleRequest) GetBargainId() int64 {
	if x != nil {
		return x.BargainId
	}
	return 0
}

// 获取活动规则
type GetBargainRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BargainRuleDescribe string `protobuf:"bytes,1,opt,name=bargainRuleDescribe,proto3" json:"bargainRuleDescribe,omitempty"` // 规则描述
}

func (x *GetBargainRuleResponse) Reset() {
	*x = GetBargainRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBargainRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBargainRuleResponse) ProtoMessage() {}

func (x *GetBargainRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBargainRuleResponse.ProtoReflect.Descriptor instead.
func (*GetBargainRuleResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{25}
}

func (x *GetBargainRuleResponse) GetBargainRuleDescribe() string {
	if x != nil {
		return x.BargainRuleDescribe
	}
	return ""
}

// 获取砍价商品信息
type GetBargainCryptominerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CryptominerId int64 `protobuf:"varint,1,opt,name=cryptominer_id,json=cryptominerId,proto3" json:"cryptominer_id,omitempty"` // 矿机id
}

func (x *GetBargainCryptominerRequest) Reset() {
	*x = GetBargainCryptominerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBargainCryptominerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBargainCryptominerRequest) ProtoMessage() {}

func (x *GetBargainCryptominerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBargainCryptominerRequest.ProtoReflect.Descriptor instead.
func (*GetBargainCryptominerRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{26}
}

func (x *GetBargainCryptominerRequest) GetCryptominerId() int64 {
	if x != nil {
		return x.CryptominerId
	}
	return 0
}

// 获取砍价矿机信息
type GetBargainCryptominerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CryptominerName    string `protobuf:"bytes,1,opt,name=cryptominer_name,json=cryptominerName,proto3" json:"cryptominer_name,omitempty"`          // 矿机名称
	CryptominerPicture string `protobuf:"bytes,2,opt,name=cryptominer_picture,json=cryptominerPicture,proto3" json:"cryptominer_picture,omitempty"` // 矿机图片
}

func (x *GetBargainCryptominerResponse) Reset() {
	*x = GetBargainCryptominerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBargainCryptominerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBargainCryptominerResponse) ProtoMessage() {}

func (x *GetBargainCryptominerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBargainCryptominerResponse.ProtoReflect.Descriptor instead.
func (*GetBargainCryptominerResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{27}
}

func (x *GetBargainCryptominerResponse) GetCryptominerName() string {
	if x != nil {
		return x.CryptominerName
	}
	return ""
}

func (x *GetBargainCryptominerResponse) GetCryptominerPicture() string {
	if x != nil {
		return x.CryptominerPicture
	}
	return ""
}

// 砍价任务
type BargainRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BargainId       int64         `protobuf:"varint,1,opt,name=bargain_id,json=bargainId,proto3" json:"bargain_id,omitempty"`                  // 砍价id
	CryptominerId   int64         `protobuf:"varint,2,opt,name=cryptominer_id,json=cryptominerId,proto3" json:"cryptominer_id,omitempty"`      // 矿机id
	CryptominerName string        `protobuf:"bytes,3,opt,name=cryptominer_name,json=cryptominerName,proto3" json:"cryptominer_name,omitempty"` // 矿机名称
	OneBargain      []*OneBargain `protobuf:"bytes,4,rep,name=oneBargain,proto3" json:"oneBargain,omitempty"`                                  // 好友帮砍记录
}

func (x *BargainRecord) Reset() {
	*x = BargainRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BargainRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BargainRecord) ProtoMessage() {}

func (x *BargainRecord) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BargainRecord.ProtoReflect.Descriptor instead.
func (*BargainRecord) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{28}
}

func (x *BargainRecord) GetBargainId() int64 {
	if x != nil {
		return x.BargainId
	}
	return 0
}

func (x *BargainRecord) GetCryptominerId() int64 {
	if x != nil {
		return x.CryptominerId
	}
	return 0
}

func (x *BargainRecord) GetCryptominerName() string {
	if x != nil {
		return x.CryptominerName
	}
	return ""
}

func (x *BargainRecord) GetOneBargain() []*OneBargain {
	if x != nil {
		return x.OneBargain
	}
	return nil
}

// 好友帮砍记录
type OneBargain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       int64   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                    // 用户id
	UserName     string  `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`               // 用户名
	Avatar       string  `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                                   // 用户头像
	BargainPrice float32 `protobuf:"fixed32,4,opt,name=bargain_price,json=bargainPrice,proto3" json:"bargain_price,omitempty"` // 本次砍价额度
}

func (x *OneBargain) Reset() {
	*x = OneBargain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneBargain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneBargain) ProtoMessage() {}

func (x *OneBargain) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneBargain.ProtoReflect.Descriptor instead.
func (*OneBargain) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{29}
}

func (x *OneBargain) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *OneBargain) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *OneBargain) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *OneBargain) GetBargainPrice() float32 {
	if x != nil {
		return x.BargainPrice
	}
	return 0
}

// 获取砍价进度
type GetBargainProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BargainId int64 `protobuf:"varint,1,opt,name=bargain_id,json=bargainId,proto3" json:"bargain_id,omitempty"` // 砍价id
}

func (x *GetBargainProgressRequest) Reset() {
	*x = GetBargainProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBargainProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBargainProgressRequest) ProtoMessage() {}

func (x *GetBargainProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBargainProgressRequest.ProtoReflect.Descriptor instead.
func (*GetBargainProgressRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{30}
}

func (x *GetBargainProgressRequest) GetBargainId() int64 {
	if x != nil {
		return x.BargainId
	}
	return 0
}

// 获取砍价进度
type GetBargainProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityStarttime string  `protobuf:"bytes,1,opt,name=activity_starttime,json=activityStarttime,proto3" json:"activity_starttime,omitempty"` // 活动开始时间
	RemainingRice     float32 `protobuf:"fixed32,2,opt,name=remaining_rice,json=remainingRice,proto3" json:"remaining_rice,omitempty"`           // 剩余金额
}

func (x *GetBargainProgressResponse) Reset() {
	*x = GetBargainProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBargainProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBargainProgressResponse) ProtoMessage() {}

func (x *GetBargainProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBargainProgressResponse.ProtoReflect.Descriptor instead.
func (*GetBargainProgressResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{31}
}

func (x *GetBargainProgressResponse) GetActivityStarttime() string {
	if x != nil {
		return x.ActivityStarttime
	}
	return ""
}

func (x *GetBargainProgressResponse) GetRemainingRice() float32 {
	if x != nil {
		return x.RemainingRice
	}
	return 0
}

// 金额计算
type BargainAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstbargainPercentage float32 `protobuf:"fixed32,1,opt,name=firstbargain_percentage,json=firstbargainPercentage,proto3" json:"firstbargain_percentage,omitempty"` // 初次砍价百分比
	BargainMinprice        float32 `protobuf:"fixed32,2,opt,name=bargain_minprice,json=bargainMinprice,proto3" json:"bargain_minprice,omitempty"`                      // 砍价最小额度
	BargainPrice           float32 `protobuf:"fixed32,3,opt,name=bargain_price,json=bargainPrice,proto3" json:"bargain_price,omitempty"`                               // 本次砍价额度
}

func (x *BargainAmount) Reset() {
	*x = BargainAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BargainAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BargainAmount) ProtoMessage() {}

func (x *BargainAmount) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BargainAmount.ProtoReflect.Descriptor instead.
func (*BargainAmount) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{32}
}

func (x *BargainAmount) GetFirstbargainPercentage() float32 {
	if x != nil {
		return x.FirstbargainPercentage
	}
	return 0
}

func (x *BargainAmount) GetBargainMinprice() float32 {
	if x != nil {
		return x.BargainMinprice
	}
	return 0
}

func (x *BargainAmount) GetBargainPrice() float32 {
	if x != nil {
		return x.BargainPrice
	}
	return 0
}

// Profile 暂时从用户服务拿到
type Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`      // 用户id
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"` // 用户名
	Avatar   string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                     // 用户头像
}

func (x *Profile) Reset() {
	*x = Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{33}
}

func (x *Profile) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Profile) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Profile) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

// PurchaseRecord 购买记录
type GetPurchaseRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
}

func (x *GetPurchaseRecordRequest) Reset() {
	*x = GetPurchaseRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPurchaseRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPurchaseRecordRequest) ProtoMessage() {}

func (x *GetPurchaseRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPurchaseRecordRequest.ProtoReflect.Descriptor instead.
func (*GetPurchaseRecordRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{34}
}

func (x *GetPurchaseRecordRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// PurchaseRecord 购买记录
type GetPurchaseRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurchaseRecord []*PurchaseRecord `protobuf:"bytes,1,rep,name=PurchaseRecord,proto3" json:"PurchaseRecord,omitempty"`
}

func (x *GetPurchaseRecordResponse) Reset() {
	*x = GetPurchaseRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPurchaseRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPurchaseRecordResponse) ProtoMessage() {}

func (x *GetPurchaseRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPurchaseRecordResponse.ProtoReflect.Descriptor instead.
func (*GetPurchaseRecordResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{35}
}

func (x *GetPurchaseRecordResponse) GetPurchaseRecord() []*PurchaseRecord {
	if x != nil {
		return x.PurchaseRecord
	}
	return nil
}

// 单条购买记录
type PurchaseRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           int64   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PurchaseRecordId int64   `protobuf:"varint,2,opt,name=purchase_record_id,json=purchaseRecordId,proto3" json:"purchase_record_id,omitempty"` // 购买记录id
	GoodName         string  `protobuf:"bytes,3,opt,name=good_name,json=goodName,proto3" json:"good_name,omitempty"`                            // 商品名称
	GoodPicture      string  `protobuf:"bytes,4,opt,name=good_picture,json=goodPicture,proto3" json:"good_picture,omitempty"`                   // 商品图片
	GoodQuantity     int64   `protobuf:"varint,5,opt,name=good_quantity,json=goodQuantity,proto3" json:"good_quantity,omitempty"`               // 商品数量
	PurchaseTime     string  `protobuf:"bytes,6,opt,name=purchase_time,json=purchaseTime,proto3" json:"purchase_time,omitempty"`                // 购买时间
	PurchasePrice    float32 `protobuf:"fixed32,7,opt,name=purchase_price,json=purchasePrice,proto3" json:"purchase_price,omitempty"`           // 购买价格
	PurchaseWay      string  `protobuf:"bytes,8,opt,name=purchase_way,json=purchaseWay,proto3" json:"purchase_way,omitempty"`                   // 购买方式
	PaymentWay       string  `protobuf:"bytes,9,opt,name=payment_way,json=paymentWay,proto3" json:"payment_way,omitempty"`                      // 支付方式 0：U ,1:ADF
}

func (x *PurchaseRecord) Reset() {
	*x = PurchaseRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseRecord) ProtoMessage() {}

func (x *PurchaseRecord) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseRecord.ProtoReflect.Descriptor instead.
func (*PurchaseRecord) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{36}
}

func (x *PurchaseRecord) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PurchaseRecord) GetPurchaseRecordId() int64 {
	if x != nil {
		return x.PurchaseRecordId
	}
	return 0
}

func (x *PurchaseRecord) GetGoodName() string {
	if x != nil {
		return x.GoodName
	}
	return ""
}

func (x *PurchaseRecord) GetGoodPicture() string {
	if x != nil {
		return x.GoodPicture
	}
	return ""
}

func (x *PurchaseRecord) GetGoodQuantity() int64 {
	if x != nil {
		return x.GoodQuantity
	}
	return 0
}

func (x *PurchaseRecord) GetPurchaseTime() string {
	if x != nil {
		return x.PurchaseTime
	}
	return ""
}

func (x *PurchaseRecord) GetPurchasePrice() float32 {
	if x != nil {
		return x.PurchasePrice
	}
	return 0
}

func (x *PurchaseRecord) GetPurchaseWay() string {
	if x != nil {
		return x.PurchaseWay
	}
	return ""
}

func (x *PurchaseRecord) GetPaymentWay() string {
	if x != nil {
		return x.PaymentWay
	}
	return ""
}

type JudgeGoodsPurchaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GoodName string `protobuf:"bytes,2,opt,name=good_name,json=goodName,proto3" json:"good_name,omitempty"` // 商品名称
}

func (x *JudgeGoodsPurchaseRequest) Reset() {
	*x = JudgeGoodsPurchaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JudgeGoodsPurchaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JudgeGoodsPurchaseRequest) ProtoMessage() {}

func (x *JudgeGoodsPurchaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JudgeGoodsPurchaseRequest.ProtoReflect.Descriptor instead.
func (*JudgeGoodsPurchaseRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{37}
}

func (x *JudgeGoodsPurchaseRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *JudgeGoodsPurchaseRequest) GetGoodName() string {
	if x != nil {
		return x.GoodName
	}
	return ""
}

type JudgeGoodsPurchaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPurchase bool `protobuf:"varint,1,opt,name=is_purchase,json=isPurchase,proto3" json:"is_purchase,omitempty"` // 商品名称
}

func (x *JudgeGoodsPurchaseResponse) Reset() {
	*x = JudgeGoodsPurchaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JudgeGoodsPurchaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JudgeGoodsPurchaseResponse) ProtoMessage() {}

func (x *JudgeGoodsPurchaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JudgeGoodsPurchaseResponse.ProtoReflect.Descriptor instead.
func (*JudgeGoodsPurchaseResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{38}
}

func (x *JudgeGoodsPurchaseResponse) GetIsPurchase() bool {
	if x != nil {
		return x.IsPurchase
	}
	return false
}

var File_block_proto protoreflect.FileDescriptor

var file_block_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x1d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x69, 0x6e, 0x67, 0x22, 0x1e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x22, 0x9b, 0x03, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f,
	0x0a, 0x13, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x31, 0x0a, 0x14, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x31, 0x0a, 0x14, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x77, 0x61, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x61, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x32, 0x0a, 0x11, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xfc, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x70, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x77, 0x61,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x57, 0x61, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x81, 0x02, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x5f,
	0x70, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x61,
	0x72, 0x67, 0x61, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x22, 0x37, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x22, 0x33, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x18, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x19, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x08, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x93, 0x02, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x42, 0x61,
	0x72, 0x67, 0x61, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x5f, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x61, 0x72, 0x67,
	0x61, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2f, 0x0a, 0x14, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x47, 0x6f, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x15,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x6f, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x6f,
	0x6f, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x09, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x47, 0x6f, 0x6f, 0x64, 0x22, 0xcf, 0x01, 0x0a, 0x09, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47,
	0x6f, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67, 0x6f, 0x6f, 0x64, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x77, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x57, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x6f, 0x6f,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x34, 0x0a, 0x0b, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x0b, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x6d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x04, 0x50, 0x72, 0x6f, 0x70, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x70,
	0x52, 0x04, 0x50, 0x72, 0x6f, 0x70, 0x22, 0xb1, 0x05, 0x0a, 0x0b, 0x43, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2f, 0x0a, 0x13, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f,
	0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x31, 0x0a, 0x14, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x77, 0x61, 0x79, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x57, 0x61,
	0x79, 0x12, 0x34, 0x0a, 0x16, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x14, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x77, 0x61, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x61, 0x79, 0x22, 0xa3, 0x02, 0x0a, 0x04, 0x50,
	0x72, 0x6f, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x72, 0x6f, 0x70, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x70, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x77, 0x61, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x61, 0x79,
	0x22, 0x5d, 0x0a, 0x13, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2d, 0x0a, 0x12, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x69, 0x64, 0x22,
	0x35, 0x0a, 0x14, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x62, 0x61,
	0x72, 0x67, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x42,
	0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x22, 0x5c, 0x0a, 0x1a, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x6d, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x19, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69,
	0x6e, 0x65, 0x72, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x6c, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x6f,
	0x6f, 0x64, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x67, 0x6f, 0x6f, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22,
	0x56, 0x0a, 0x1a, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x42, 0x61,
	0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x69, 0x73, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x69, 0x73, 0x46, 0x69, 0x72, 0x73, 0x74, 0x22, 0x36, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x61,
	0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22,
	0x4a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x62, 0x61, 0x72,
	0x67, 0x61, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52,
	0x75, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0x45, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x7b, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e,
	0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f,
	0x0a, 0x13, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x22,
	0xb3, 0x01, 0x0a, 0x0d, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x6d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x6f, 0x6e, 0x65, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x6f,
	0x6e, 0x65, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x0a, 0x6f, 0x6e, 0x65, 0x42, 0x61,
	0x72, 0x67, 0x61, 0x69, 0x6e, 0x22, 0x7f, 0x0a, 0x0a, 0x6f, 0x6e, 0x65, 0x42, 0x61, 0x72, 0x67,
	0x61, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69,
	0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x3a, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x42, 0x61, 0x72,
	0x67, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x22, 0x72, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2d, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x52, 0x69, 0x63, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x0d, 0x42, 0x61, 0x72, 0x67, 0x61,
	0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x17, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x16, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x6d, 0x69, 0x6e,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x62, 0x61, 0x72,
	0x67, 0x61, 0x69, 0x6e, 0x4d, 0x69, 0x6e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0c, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x22, 0x57, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x33, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x5a, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0e, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0xcc, 0x02, 0x0a, 0x0e,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x50, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67, 0x6f,
	0x6f, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x5f, 0x77, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x57, 0x61, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x77, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x61, 0x79, 0x22, 0x51, 0x0a, 0x19, 0x4a, 0x75,
	0x64, 0x67, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3d, 0x0a,
	0x1a, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x73, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x32, 0x8c, 0x0b, 0x0a,
	0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x27, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x0e,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4e, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x49, 0x73,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x12, 0x18, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x6f, 0x6f, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1b, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x47, 0x6f, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x6f, 0x6f,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x17, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x49, 0x73, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a,
	0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12,
	0x1c, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x11, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x46, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x12, 0x1b, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x47, 0x0a, 0x0c, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e,
	0x12, 0x1a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x42, 0x61,
	0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x17, 0x43, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x6c, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x12, 0x21, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x61, 0x0a, 0x1a, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12,
	0x20, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69,
	0x6e, 0x65, 0x72, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x6d, 0x69, 0x6e, 0x65, 0x72, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x70, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f,
	0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x12, 0x23, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61,
	0x72, 0x67, 0x61, 0x69, 0x6e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x6d, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x20, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x12, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x20, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4a,
	0x75, 0x64, 0x67, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x5a, 0x07, 0x2e,
	0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_block_proto_rawDescOnce sync.Once
	file_block_proto_rawDescData = file_block_proto_rawDesc
)

func file_block_proto_rawDescGZIP() []byte {
	file_block_proto_rawDescOnce.Do(func() {
		file_block_proto_rawDescData = protoimpl.X.CompressGZIP(file_block_proto_rawDescData)
	})
	return file_block_proto_rawDescData
}

var file_block_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_block_proto_goTypes = []interface{}{
	(*Request)(nil),                       // 0: block.Request
	(*Response)(nil),                      // 1: block.Response
	(*CreateCryptominerRequest)(nil),      // 2: block.CreateCryptominerRequest
	(*IsSuccessResponse)(nil),             // 3: block.IsSuccessResponse
	(*CreatePropRequest)(nil),             // 4: block.CreatePropRequest
	(*CreateActivityRequest)(nil),         // 5: block.CreateActivityRequest
	(*StartActivityRequest)(nil),          // 6: block.StartActivityRequest
	(*StartGoodRequest)(nil),              // 7: block.StartGoodRequest
	(*AdminActivityListRequest)(nil),      // 8: block.AdminActivityListRequest
	(*AdminActivityListResponse)(nil),     // 9: block.AdminActivityListResponse
	(*Activity)(nil),                      // 10: block.Activity
	(*AdminGoodListRequest)(nil),          // 11: block.AdminGoodListRequest
	(*AdminGoodListResponse)(nil),         // 12: block.AdminGoodListResponse
	(*AdminGood)(nil),                     // 13: block.AdminGood
	(*GetGoodsListRequest)(nil),           // 14: block.GetGoodsListRequest
	(*GetGoodsListResponse)(nil),          // 15: block.GetGoodsListResponse
	(*Cryptominer)(nil),                   // 16: block.Cryptominer
	(*Prop)(nil),                          // 17: block.Prop
	(*JudgeBargainRequest)(nil),           // 18: block.JudgeBargainRequest
	(*JudgeBargainResponse)(nil),          // 19: block.JudgeBargainResponse
	(*CryptominerPurchaseRequest)(nil),    // 20: block.CryptominerPurchaseRequest
	(*CryptominerBargainRequest)(nil),     // 21: block.CryptominerBargainRequest
	(*PropPurchaseRequest)(nil),           // 22: block.PropPurchaseRequest
	(*CryptominerBargainResponse)(nil),    // 23: block.CryptominerBargainResponse
	(*GetBargainRuleRequest)(nil),         // 24: block.GetBargainRuleRequest
	(*GetBargainRuleResponse)(nil),        // 25: block.GetBargainRuleResponse
	(*GetBargainCryptominerRequest)(nil),  // 26: block.GetBargainCryptominerRequest
	(*GetBargainCryptominerResponse)(nil), // 27: block.GetBargainCryptominerResponse
	(*BargainRecord)(nil),                 // 28: block.BargainRecord
	(*OneBargain)(nil),                    // 29: block.oneBargain
	(*GetBargainProgressRequest)(nil),     // 30: block.GetBargainProgressRequest
	(*GetBargainProgressResponse)(nil),    // 31: block.GetBargainProgressResponse
	(*BargainAmount)(nil),                 // 32: block.BargainAmount
	(*Profile)(nil),                       // 33: block.Profile
	(*GetPurchaseRecordRequest)(nil),      // 34: block.GetPurchaseRecordRequest
	(*GetPurchaseRecordResponse)(nil),     // 35: block.GetPurchaseRecordResponse
	(*PurchaseRecord)(nil),                // 36: block.PurchaseRecord
	(*JudgeGoodsPurchaseRequest)(nil),     // 37: block.JudgeGoodsPurchaseRequest
	(*JudgeGoodsPurchaseResponse)(nil),    // 38: block.JudgeGoodsPurchaseResponse
}
var file_block_proto_depIdxs = []int32{
	10, // 0: block.AdminActivityListResponse.Activity:type_name -> block.Activity
	13, // 1: block.AdminGoodListResponse.AdminGood:type_name -> block.AdminGood
	16, // 2: block.GetGoodsListResponse.Cryptominer:type_name -> block.Cryptominer
	17, // 3: block.GetGoodsListResponse.Prop:type_name -> block.Prop
	29, // 4: block.BargainRecord.oneBargain:type_name -> block.oneBargain
	36, // 5: block.GetPurchaseRecordResponse.PurchaseRecord:type_name -> block.PurchaseRecord
	0,  // 6: block.Block.Ping:input_type -> block.Request
	2,  // 7: block.Block.CreateCryptominer:input_type -> block.CreateCryptominerRequest
	4,  // 8: block.Block.CreateProp:input_type -> block.CreatePropRequest
	11, // 9: block.Block.AdminGoodList:input_type -> block.AdminGoodListRequest
	7,  // 10: block.Block.StartGood:input_type -> block.StartGoodRequest
	5,  // 11: block.Block.CreateActivity:input_type -> block.CreateActivityRequest
	8,  // 12: block.Block.AdminActivityList:input_type -> block.AdminActivityListRequest
	6,  // 13: block.Block.StartActivity:input_type -> block.StartActivityRequest
	14, // 14: block.Block.GetGoodsList:input_type -> block.GetGoodsListRequest
	18, // 15: block.Block.JudgeBargain:input_type -> block.JudgeBargainRequest
	20, // 16: block.Block.CryptominerFullPurchase:input_type -> block.CryptominerPurchaseRequest
	21, // 17: block.Block.CryptominerBargainPurchase:input_type -> block.CryptominerBargainRequest
	22, // 18: block.Block.PropPurchase:input_type -> block.PropPurchaseRequest
	24, // 19: block.Block.GetBargainRule:input_type -> block.GetBargainRuleRequest
	26, // 20: block.Block.GetBargainCryptominer:input_type -> block.GetBargainCryptominerRequest
	30, // 21: block.Block.GetBargainProgress:input_type -> block.GetBargainProgressRequest
	34, // 22: block.Block.GetPurchaseRecord:input_type -> block.GetPurchaseRecordRequest
	37, // 23: block.Block.JudgeGoodsPurchase:input_type -> block.JudgeGoodsPurchaseRequest
	1,  // 24: block.Block.Ping:output_type -> block.Response
	3,  // 25: block.Block.CreateCryptominer:output_type -> block.IsSuccessResponse
	3,  // 26: block.Block.CreateProp:output_type -> block.IsSuccessResponse
	12, // 27: block.Block.AdminGoodList:output_type -> block.AdminGoodListResponse
	3,  // 28: block.Block.StartGood:output_type -> block.IsSuccessResponse
	3,  // 29: block.Block.CreateActivity:output_type -> block.IsSuccessResponse
	9,  // 30: block.Block.AdminActivityList:output_type -> block.AdminActivityListResponse
	3,  // 31: block.Block.StartActivity:output_type -> block.IsSuccessResponse
	15, // 32: block.Block.GetGoodsList:output_type -> block.GetGoodsListResponse
	19, // 33: block.Block.JudgeBargain:output_type -> block.JudgeBargainResponse
	3,  // 34: block.Block.CryptominerFullPurchase:output_type -> block.IsSuccessResponse
	23, // 35: block.Block.CryptominerBargainPurchase:output_type -> block.CryptominerBargainResponse
	3,  // 36: block.Block.PropPurchase:output_type -> block.IsSuccessResponse
	25, // 37: block.Block.GetBargainRule:output_type -> block.GetBargainRuleResponse
	27, // 38: block.Block.GetBargainCryptominer:output_type -> block.GetBargainCryptominerResponse
	31, // 39: block.Block.GetBargainProgress:output_type -> block.GetBargainProgressResponse
	35, // 40: block.Block.GetPurchaseRecord:output_type -> block.GetPurchaseRecordResponse
	38, // 41: block.Block.JudgeGoodsPurchase:output_type -> block.JudgeGoodsPurchaseResponse
	24, // [24:42] is the sub-list for method output_type
	6,  // [6:24] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_block_proto_init() }
func file_block_proto_init() {
	if File_block_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_block_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCryptominerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsSuccessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePropRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateActivityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActivityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartGoodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminActivityListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminActivityListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGoodListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGoodListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGood); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodsListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodsListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cryptominer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JudgeBargainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JudgeBargainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptominerPurchaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptominerBargainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropPurchaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptominerBargainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBargainRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBargainRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBargainCryptominerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBargainCryptominerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BargainRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneBargain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBargainProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBargainProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BargainAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPurchaseRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPurchaseRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JudgeGoodsPurchaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JudgeGoodsPurchaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_block_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_block_proto_goTypes,
		DependencyIndexes: file_block_proto_depIdxs,
		MessageInfos:      file_block_proto_msgTypes,
	}.Build()
	File_block_proto = out.File
	file_block_proto_rawDesc = nil
	file_block_proto_goTypes = nil
	file_block_proto_depIdxs = nil
}
